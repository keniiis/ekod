---
// Importa el tipo Product correctamente
import type { Product } from '../data/products';
import { formatPriceCLP } from '../utils/formatting'; // Import the formatting function

// Define las props con el tipo correcto
interface Props {
  product: Product; // Usa el tipo importado
}

// Extrae la prop product
const { product } = Astro.props;
---

<article class="group relative">
  <a href={`/producto/${product.slug}`} class="block"> {/* Use product.slug here */}
    <!-- Imagen del producto -->
    <div class="aspect-square bg-gray-50 mb-3 overflow-hidden rounded">
      {product.images[0] ? (
        <img 
          src={product.images[0]} 
          alt={product.name}
          class="w-full h-full object-cover transition duration-300 group-hover:opacity-90"
          loading="lazy"
        />
      ) : (
        <div class="w-full h-full flex items-center justify-center bg-gray-100">
          <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
            <rect x="3" y="3" width="18" height="18" rx="2" ry="2"></rect>
            <circle cx="8.5" cy="8.5" r="1.5"></circle>
            <polyline points="21 15 16 10 5 21"></polyline>
          </svg>
        </div>
      )}
    </div>
    
    <!-- InformaciÃ³n del producto -->
    <div class="text-center">
      <h3 class="text-sm font-medium text-gray-900 mb-1">{product.name}</h3>
      {product.category && (
        <p class="text-xs text-gray-500 mb-2 capitalize">{product.category}</p>
      )}
      <p class="text-sm font-medium text-gray-900">
        ${formatPriceCLP(product.price)} {/* Use the formatting function */}
        {product.compareAtPrice && (
          <span class="ml-2 text-xs text-gray-500 line-through">
            ${formatPriceCLP(product.compareAtPrice)} {/* Use the formatting function */}
          </span>
        )}
      </p>
    </div>
  </a>
</article>
